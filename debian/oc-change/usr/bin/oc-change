#!/usr/bin/env python

import pygtk
pygtk.require('2.0')
import gtk
import os
import getpass

class cb_exit:
	def disable_buttons(self):
		self.cancel.set_sensitive(False)
		self.none.set_sensitive(False)
		self.modest.set_sensitive(False)
		self.medium.set_sensitive(False)
		self.high.set_sensitive(False)
		self.turbo.set_sensitive(False)


	def cancel_action(self,btn):
		self.disable_buttons()
		gtk.main_quit()

	def none_action(self,btn):
		self.disable_buttons()
		self.status.set_label("Setting overclock, please standby...")
		os.system("sed -i /boot/config.txt -r -e 's/arm_freq=[0123456789]+/arm_freq=700/'")
		os.system("sed -i /boot/config.txt -r -e 's/core_freq=[0123456789]+/core_freq=250/'")
		os.system("sed -i /boot/config.txt -r -e 's/sdram_freq=[0123456789]+/sdram_freq=400/'")
		os.system("sed -i /boot/config.txt -r -e 's/over_voltage=[0123456789]+/over_voltage=0/'")
		gtk.main_quit()

	def modest_action(self,btn):
		self.disable_buttons()
		self.status.set_label("Setting overclock, please standby...")
		os.system("sed -i /boot/config.txt -r -e 's/arm_freq=[0123456789]+/arm_freq=800/'")
		os.system("sed -i /boot/config.txt -r -e 's/core_freq=[0123456789]+/core_freq=300/'")
		os.system("sed -i /boot/config.txt -r -e 's/sdram_freq=[0123456789]+/sdram_freq=400/'")
		os.system("sed -i /boot/config.txt -r -e 's/over_voltage=[0123456789]+/over_voltage=0/'")
		gtk.main_quit()
		
	def medium_action(self,btn):
		self.disable_buttons()
		self.status.set_label("Setting overclock, please standby...")
		os.system("sed -i /boot/config.txt -r -e 's/arm_freq=[0123456789]+/arm_freq=900/'")
		os.system("sed -i /boot/config.txt -r -e 's/core_freq=[0123456789]+/core_freq=333/'")
		os.system("sed -i /boot/config.txt -r -e 's/sdram_freq=[0123456789]+/sdram_freq=450/'")
		os.system("sed -i /boot/config.txt -r -e 's/over_voltage=[0123456789]+/over_voltage=2/'")
		gtk.main_quit()
		
	def high_action(self,btn):
		self.disable_buttons()
		self.status.set_label("Setting overclock, please standby...")
		os.system("sed -i /boot/config.txt -r -e 's/arm_freq=[0123456789]+/arm_freq=950/'")
		os.system("sed -i /boot/config.txt -r -e 's/core_freq=[0123456789]+/core_freq=450/'")
		os.system("sed -i /boot/config.txt -r -e 's/sdram_freq=[0123456789]+/sdram_freq=450/'")
		os.system("sed -i /boot/config.txt -r -e 's/over_voltage=[0123456789]+/over_voltage=6/'")
		gtk.main_quit()
		
	def turbo_action(self,btn):
		self.disable_buttons()
		self.status.set_label("Setting overclock, please standby...")
		os.system("sed -i /boot/config.txt -r -e 's/arm_freq=[0123456789]+/arm_freq=1000/'")
		os.system("sed -i /boot/config.txt -r -e 's/core_freq=[0123456789]+/core_freq=500/'")
		os.system("sed -i /boot/config.txt -r -e 's/sdram_freq=[0123456789]+/sdram_freq=500/'")
		os.system("sed -i /boot/config.txt -r -e 's/over_voltage=[0123456789]+/over_voltage=6/'")
		gtk.main_quit()
		
	def create_window(self):
		self.window = gtk.Window()
		title = "What level of overclocking would you like to set?"
		self.window.set_title(title)
		self.window.set_border_width(5)
		self.window.set_size_request(500, 80)
		self.window.set_resizable(False)
		self.window.set_keep_above(True)
		self.window.stick
		self.window.set_position(1)
		self.window.connect("delete_event", gtk.main_quit)
		windowicon = self.window.render_icon(gtk.STOCK_QUIT, gtk.ICON_SIZE_MENU)
		self.window.set_icon(windowicon)

		
		#Create HBox for buttons
		self.button_box = gtk.HBox()
		self.button_box.show()
		
		#Cancel button
		self.cancel = gtk.Button(stock = gtk.STOCK_CANCEL)
		self.cancel.set_border_width(4)
		self.cancel.connect("clicked", self.cancel_action)
		self.button_box.pack_start(self.cancel)
		self.cancel.show()
		
		#none button
		self.none = gtk.Button("_None")
		self.none.set_border_width(4)
		self.none.connect("clicked", self.none_action)
		self.button_box.pack_start(self.none)
		self.none.show()

		#modest button
		self.modest = gtk.Button("_Modest")
		self.modest.set_border_width(4)
		self.modest.connect("clicked", self.modest_action)
		self.button_box.pack_start(self.modest)
		self.modest.show()
		
		#medium button
		self.medium = gtk.Button("_Medium")
		self.medium.set_border_width(4)
		self.medium.connect("clicked", self.medium_action)
		self.button_box.pack_start(self.medium)
		self.medium.show()
		
		#high button
		self.high = gtk.Button("_High")
		self.high.set_border_width(4)
		self.high.connect("clicked", self.high_action)
		self.button_box.pack_start(self.high)
		self.high.show()
		
		#turbo button
		self.turbo = gtk.Button("_Turbo")
		self.turbo.set_border_width(4)
		self.turbo.connect("clicked", self.turbo_action)
		self.button_box.pack_start(self.turbo)
		self.turbo.show()
		
		
		
		#Create HBox for status label
		self.label_box = gtk.HBox()
		self.label_box.show()
		self.status = gtk.Label()
		self.status.show()
		self.label_box.pack_start(self.status)
		
		#Create VBox and pack the above HBox's
		self.vbox = gtk.VBox()
		self.vbox.pack_start(self.button_box)
		self.vbox.pack_start(self.label_box)
		self.vbox.show()
		
		self.window.add(self.vbox)
		self.window.show()
		
	def __init__(self):
		self.create_window()


def main():
	gtk.main()

if __name__ == "__main__":
	go = cb_exit()
	main()
